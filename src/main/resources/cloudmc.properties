db.fields.encryption.key=ql_4>7qtVvy39(!Bx$

cloudmc.db.hosts=127.0.0.1
cloudmc.db.userName=cloudmc
cloudmc.db.password=cloudmc
cloudmc.db.validationTimeout=1000
cloudmc.db.connectionTimeout=30000
cloudmc.db.maxLifetime=1800000
cloudmc.db.maximumPoolSize=50

cloudmc_audit.db.hosts=127.0.0.1
cloudmc_audit.db.userName=cloudmc
cloudmc_audit.db.password=cloudmc
cloudmc_audit.db.validationTimeout=1000
cloudmc_audit.db.connectionTimeout=30000
cloudmc_audit.db.maxLifetime=1800000
cloudmc_audit.db.maximumPoolSize=50

cloudmc_content.db.hosts=127.0.0.1
cloudmc_content.db.userName=cloudmc
cloudmc_content.db.password=cloudmc
cloudmc_content.db.validationTimeout=1000
cloudmc_content.db.connectionTimeout=30000
cloudmc_content.db.maxLifetime=1800000
cloudmc_content.db.maximumPoolSize=50
plugin.allowed.packages=com.cloudops.mc.plugin
redis.host=127.0.0.1
redis.port=6379
redis.session.key.timeout.seconds=3700
redis.connection.timeout.milliseconds=2000

# optional path to allow loading of static resources outside of the jar (e.g. status of the instance)
static.files.location=/opt/cloudmc/static/
##
### Secret Storage Encryption Keys
## When adding a new key, you must always append and set it as active. Never remove an old key, or the ordering of keys will be broken.
## To generate a key, use java -Dloader.main=com.cloudops.mc.tools.KeyGen -jar cloudmc.jar
keys.e3.list=c2l4dGVlbnRvbnNjcnlwdA==, bmljaG9sYXNwYXVuc2tleQ==
### ^^^ Dummy keys for development
#
keys.e3.active=1

# Jersey client timeouts (in milliseconds)
jersey_client.connect.timeout=5000
jersey_client.read.timeout=120000

# HttpClient timeouts (in milliseconds)
http_client.connect.timeout=5000
http_client.read.timeout=60000
